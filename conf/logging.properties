# Logging levels
#
# off	 	turn off logging
# severe	a major failure which prevents normal program execution
# warning	a serious issue, likely causing incorrect behavior
# info		major lifecycle events (startup, shutdown, ...)
# config	detailed configuration logging
# fine		debugging at an administrator level (not familiar with source code)
# finer		detailed debugging at a developer level
# finest	events not normally debugged (expected exceptions, protocol parsing, ...)
# all	 	all messages should be logged

# Handlers and default logging level
handlers = java.util.logging.FileHandler, java.util.logging.ConsoleHandler
.level = ALL

# Handler-specific properties
java.util.logging.FileHandler.level		= CONFIG
java.util.logging.FileHandler.pattern   = ../output/log/out.%g.log
#java.util.logging.FileHandler.pattern   = ../../../../../tmp/log/out.%g.log
java.util.logging.FileHandler.limit     = 10000000
java.util.logging.FileHandler.count     = 3
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter

java.util.logging.ConsoleHandler.level     = FINE
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# Facility-specific properties
sun.awt.level		= WARNING
java.awt.level		= WARNING
javax.swing.level	= WARNING
sun.rmi.level		= CONFIG

# Class-specific levels
#esi.bc.manip.level = CONFIG

# Indicator to prevent reloading
logging.properties = yes
